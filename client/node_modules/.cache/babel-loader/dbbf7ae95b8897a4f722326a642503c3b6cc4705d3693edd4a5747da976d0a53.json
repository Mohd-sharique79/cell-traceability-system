{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohds\\\\cell-traceability-system\\\\client\\\\src\\\\components\\\\WarehouseAllocation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Package, Plus, Trash2, Save } from 'lucide-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WarehouseAllocation = () => {\n  _s();\n  const [kitSerialNumber, setKitSerialNumber] = useState('');\n  const [operatorName, setOperatorName] = useState('');\n  const [cellCount, setCellCount] = useState(16); // Default to 16 cells\n  const [cellSerialNumbers, setCellSerialNumbers] = useState([]);\n  const [currentCellInput, setCurrentCellInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleAddCell = () => {\n    if (!currentCellInput.trim()) {\n      toast.error('Please enter a cell serial number');\n      return;\n    }\n    if (cellSerialNumbers.includes(currentCellInput.trim())) {\n      toast.error('Cell serial number already added');\n      return;\n    }\n    setCellSerialNumbers([...cellSerialNumbers, currentCellInput.trim()]);\n    setCurrentCellInput('');\n  };\n  const handleRemoveCell = index => {\n    setCellSerialNumbers(cellSerialNumbers.filter((_, i) => i !== index));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!kitSerialNumber.trim()) {\n      toast.error('Please enter a kit serial number');\n      return;\n    }\n    if (!operatorName.trim()) {\n      toast.error('Please enter operator name');\n      return;\n    }\n    if (cellCount < 1 || cellCount > 100) {\n      toast.error('Please enter a valid number of cells (1-100)');\n      return;\n    }\n    if (cellSerialNumbers.length === 0) {\n      toast.error('Please add at least one cell');\n      return;\n    }\n    if (cellSerialNumbers.length !== cellCount) {\n      toast.error(`Please allocate exactly ${cellCount} cells. Currently allocated: ${cellSerialNumbers.length}`);\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/kits', {\n        kitSerialNumber: kitSerialNumber.trim(),\n        cellSerialNumbers,\n        operatorName: operatorName.trim()\n      });\n      toast.success(`Kit ${kitSerialNumber} allocated with ${cellSerialNumbers.length} cells successfully!`);\n\n      // Reset form\n      setKitSerialNumber('');\n      setOperatorName('');\n      setCellCount(16); // Reset to default\n      setCellSerialNumbers([]);\n      setCurrentCellInput('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error allocating kit:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to allocate kit');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleAddCell();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium text-gray-900 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Package, {\n            className: \"h-5 w-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), \"Warehouse Kit Allocation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-gray-600\",\n          children: \"Allocate cells to kits for manufacturing traceability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"p-6 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"kitSerialNumber\",\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Kit Serial Number *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"kitSerialNumber\",\n              value: kitSerialNumber,\n              onChange: e => setKitSerialNumber(e.target.value),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\",\n              placeholder: \"Enter kit barcode\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"operatorName\",\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Operator Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"operatorName\",\n              value: operatorName,\n              onChange: e => setOperatorName(e.target.value),\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\",\n              placeholder: \"Enter operator name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cellCount\",\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Number of Cells *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"cellCount\",\n              value: cellCount,\n              onChange: e => {\n                const newCount = parseInt(e.target.value) || 1;\n                // Ensure minimum value of 1 and maximum of 100\n                const validCount = Math.max(1, Math.min(100, newCount));\n                setCellCount(validCount);\n                // Clear existing cells if new count is less than current\n                if (validCount < cellSerialNumbers.length) {\n                  setCellSerialNumbers(cellSerialNumbers.slice(0, validCount));\n                }\n              },\n              min: \"1\",\n              max: \"100\",\n              className: \"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\",\n              placeholder: \"Enter number of cells (1-100)\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-1 text-xs text-gray-500\",\n              children: \"Enter any number between 1 and 100 cells\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Cell Serial Numbers *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-sm font-medium ${cellSerialNumbers.length === cellCount ? 'text-green-600' : cellSerialNumbers.length > cellCount ? 'text-red-600' : 'text-gray-500'}`,\n              children: [cellSerialNumbers.length, \" / \", cellCount, \" cells\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentCellInput,\n              onChange: e => setCurrentCellInput(e.target.value),\n              onKeyPress: handleKeyPress,\n              className: \"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\",\n              placeholder: `Scan or enter cell barcode (${cellSerialNumbers.length}/${cellCount})`,\n              disabled: cellSerialNumbers.length >= cellCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleAddCell,\n              disabled: cellSerialNumbers.length >= cellCount,\n              className: \"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"h-4 w-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), \"Add\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), cellSerialNumbers.length >= cellCount && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-green-600 font-medium\",\n            children: [\"\\u2705 All \", cellCount, \" cells have been allocated!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), cellSerialNumbers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-md p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-700 mb-3\",\n            children: [\"Allocated Cells (\", cellSerialNumbers.length, \"/\", cellCount, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-4 gap-2\",\n            children: cellSerialNumbers.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between bg-white px-3 py-2 rounded border\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-mono text-gray-900\",\n                children: cell\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleRemoveCell(index),\n                className: \"text-red-500 hover:text-red-700 ml-2\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading || cellSerialNumbers.length === 0 || cellSerialNumbers.length !== cellCount,\n            className: \"px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), \"Allocating...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Save, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), \"Allocate Kit\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(WarehouseAllocation, \"fEQUDgLKvaO0oPAJg85rOpikDeg=\");\n_c = WarehouseAllocation;\nexport default WarehouseAllocation;\nvar _c;\n$RefreshReg$(_c, \"WarehouseAllocation\");","map":{"version":3,"names":["React","useState","toast","Package","Plus","Trash2","Save","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WarehouseAllocation","_s","kitSerialNumber","setKitSerialNumber","operatorName","setOperatorName","cellCount","setCellCount","cellSerialNumbers","setCellSerialNumbers","currentCellInput","setCurrentCellInput","isLoading","setIsLoading","handleAddCell","trim","error","includes","handleRemoveCell","index","filter","_","i","handleSubmit","e","preventDefault","length","response","post","success","_error$response","_error$response$data","console","data","handleKeyPress","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","newCount","parseInt","validCount","Math","max","min","slice","onKeyPress","disabled","onClick","map","cell","_c","$RefreshReg$"],"sources":["C:/Users/mohds/cell-traceability-system/client/src/components/WarehouseAllocation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Package, Plus, Trash2, Save } from 'lucide-react';\r\nimport axios from 'axios';\r\n\r\nconst WarehouseAllocation = () => {\r\n  const [kitSerialNumber, setKitSerialNumber] = useState('');\r\n  const [operatorName, setOperatorName] = useState('');\r\n  const [cellCount, setCellCount] = useState(16); // Default to 16 cells\r\n  const [cellSerialNumbers, setCellSerialNumbers] = useState([]);\r\n  const [currentCellInput, setCurrentCellInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleAddCell = () => {\r\n    if (!currentCellInput.trim()) {\r\n      toast.error('Please enter a cell serial number');\r\n      return;\r\n    }\r\n    \r\n    if (cellSerialNumbers.includes(currentCellInput.trim())) {\r\n      toast.error('Cell serial number already added');\r\n      return;\r\n    }\r\n    \r\n    setCellSerialNumbers([...cellSerialNumbers, currentCellInput.trim()]);\r\n    setCurrentCellInput('');\r\n  };\r\n\r\n  const handleRemoveCell = (index) => {\r\n    setCellSerialNumbers(cellSerialNumbers.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!kitSerialNumber.trim()) {\r\n      toast.error('Please enter a kit serial number');\r\n      return;\r\n    }\r\n    \r\n    if (!operatorName.trim()) {\r\n      toast.error('Please enter operator name');\r\n      return;\r\n    }\r\n    \r\n    if (cellCount < 1 || cellCount > 100) {\r\n      toast.error('Please enter a valid number of cells (1-100)');\r\n      return;\r\n    }\r\n    \r\n    if (cellSerialNumbers.length === 0) {\r\n      toast.error('Please add at least one cell');\r\n      return;\r\n    }\r\n    \r\n    if (cellSerialNumbers.length !== cellCount) {\r\n      toast.error(`Please allocate exactly ${cellCount} cells. Currently allocated: ${cellSerialNumbers.length}`);\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const response = await axios.post('/api/kits', {\r\n        kitSerialNumber: kitSerialNumber.trim(),\r\n        cellSerialNumbers,\r\n        operatorName: operatorName.trim()\r\n      });\r\n      \r\n      toast.success(`Kit ${kitSerialNumber} allocated with ${cellSerialNumbers.length} cells successfully!`);\r\n      \r\n      // Reset form\r\n      setKitSerialNumber('');\r\n      setOperatorName('');\r\n      setCellCount(16); // Reset to default\r\n      setCellSerialNumbers([]);\r\n      setCurrentCellInput('');\r\n      \r\n    } catch (error) {\r\n      console.error('Error allocating kit:', error);\r\n      toast.error(error.response?.data?.error || 'Failed to allocate kit');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleAddCell();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto\">\r\n      <div className=\"bg-white shadow rounded-lg\">\r\n        <div className=\"px-6 py-4 border-b border-gray-200\">\r\n          <h2 className=\"text-lg font-medium text-gray-900 flex items-center\">\r\n            <Package className=\"h-5 w-5 mr-2\" />\r\n            Warehouse Kit Allocation\r\n          </h2>\r\n          <p className=\"mt-1 text-sm text-gray-600\">\r\n            Allocate cells to kits for manufacturing traceability\r\n          </p>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n          {/* Kit Information */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <div>\r\n              <label htmlFor=\"kitSerialNumber\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Kit Serial Number *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"kitSerialNumber\"\r\n                value={kitSerialNumber}\r\n                onChange={(e) => setKitSerialNumber(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"Enter kit barcode\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"operatorName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Operator Name *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"operatorName\"\r\n                value={operatorName}\r\n                onChange={(e) => setOperatorName(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"Enter operator name\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"cellCount\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Number of Cells *\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"cellCount\"\r\n                value={cellCount}\r\n                onChange={(e) => {\r\n                  const newCount = parseInt(e.target.value) || 1;\r\n                  // Ensure minimum value of 1 and maximum of 100\r\n                  const validCount = Math.max(1, Math.min(100, newCount));\r\n                  setCellCount(validCount);\r\n                  // Clear existing cells if new count is less than current\r\n                  if (validCount < cellSerialNumbers.length) {\r\n                    setCellSerialNumbers(cellSerialNumbers.slice(0, validCount));\r\n                  }\r\n                }}\r\n                min=\"1\"\r\n                max=\"100\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder=\"Enter number of cells (1-100)\"\r\n                required\r\n              />\r\n              <p className=\"mt-1 text-xs text-gray-500\">\r\n                Enter any number between 1 and 100 cells\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Cell Allocation */}\r\n          <div>\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <label className=\"block text-sm font-medium text-gray-700\">\r\n                Cell Serial Numbers *\r\n              </label>\r\n              <span className={`text-sm font-medium ${\r\n                cellSerialNumbers.length === cellCount \r\n                  ? 'text-green-600' \r\n                  : cellSerialNumbers.length > cellCount \r\n                    ? 'text-red-600' \r\n                    : 'text-gray-500'\r\n              }`}>\r\n                {cellSerialNumbers.length} / {cellCount} cells\r\n              </span>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={currentCellInput}\r\n                onChange={(e) => setCurrentCellInput(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500\"\r\n                placeholder={`Scan or enter cell barcode (${cellSerialNumbers.length}/${cellCount})`}\r\n                disabled={cellSerialNumbers.length >= cellCount}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleAddCell}\r\n                disabled={cellSerialNumbers.length >= cellCount}\r\n                className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\r\n              >\r\n                <Plus className=\"h-4 w-4 mr-1\" />\r\n                Add\r\n              </button>\r\n            </div>\r\n            {cellSerialNumbers.length >= cellCount && (\r\n              <p className=\"mt-2 text-sm text-green-600 font-medium\">\r\n                ✅ All {cellCount} cells have been allocated!\r\n              </p>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Cell List */}\r\n          {cellSerialNumbers.length > 0 && (\r\n            <div className=\"bg-gray-50 rounded-md p-4\">\r\n              <h3 className=\"text-sm font-medium text-gray-700 mb-3\">\r\n                Allocated Cells ({cellSerialNumbers.length}/{cellCount})\r\n              </h3>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\r\n                {cellSerialNumbers.map((cell, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"flex items-center justify-between bg-white px-3 py-2 rounded border\"\r\n                  >\r\n                    <span className=\"text-sm font-mono text-gray-900\">{cell}</span>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleRemoveCell(index)}\r\n                      className=\"text-red-500 hover:text-red-700 ml-2\"\r\n                    >\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Submit Button */}\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading || cellSerialNumbers.length === 0 || cellSerialNumbers.length !== cellCount}\r\n              className=\"px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Allocating...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Save className=\"h-4 w-4 mr-2\" />\r\n                  Allocate Kit\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WarehouseAllocation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}